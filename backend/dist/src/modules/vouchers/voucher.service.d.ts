import { PrismaService } from '../prisma/prisma.service';
import { CreateVoucherDto } from './dto/create-voucher.dto';
import { ApplyVoucherDto } from './dto/apply-voucher.dto';
export declare class VoucherService {
    private prisma;
    constructor(prisma: PrismaService);
    createShopVoucher(dto: CreateVoucherDto, sellerId: string): Promise<{
        id: string;
        description: string | null;
        sellerId: string | null;
        enterpriseId: string | null;
        isActive: boolean;
        scope: import(".prisma/client").$Enums.VoucherScope;
        code: string;
        title: string;
        discountType: import(".prisma/client").$Enums.DiscountType;
        discountValue: number;
        maxDiscountValue: number | null;
        minOrderValue: number | null;
        startDate: Date;
        endDate: Date;
        usageLimit: number | null;
        usedCount: number;
    }>;
    createPlatformVoucher(dto: CreateVoucherDto): Promise<{
        id: string;
        description: string | null;
        sellerId: string | null;
        enterpriseId: string | null;
        isActive: boolean;
        scope: import(".prisma/client").$Enums.VoucherScope;
        code: string;
        title: string;
        discountType: import(".prisma/client").$Enums.DiscountType;
        discountValue: number;
        maxDiscountValue: number | null;
        minOrderValue: number | null;
        startDate: Date;
        endDate: Date;
        usageLimit: number | null;
        usedCount: number;
    }>;
    createFreeShipVoucher(dto: CreateVoucherDto): Promise<{
        id: string;
        description: string | null;
        sellerId: string | null;
        enterpriseId: string | null;
        isActive: boolean;
        scope: import(".prisma/client").$Enums.VoucherScope;
        code: string;
        title: string;
        discountType: import(".prisma/client").$Enums.DiscountType;
        discountValue: number;
        maxDiscountValue: number | null;
        minOrderValue: number | null;
        startDate: Date;
        endDate: Date;
        usageLimit: number | null;
        usedCount: number;
    }>;
    private checkCodeExists;
    claimVoucher(voucherId: string, userId: string): Promise<{
        id: string;
        userId: string;
        orderId: string | null;
        claimedAt: Date;
        used: boolean;
        voucherId: string;
    }>;
    getAvailableVouchers(userId: string, sellerIdsInCart: string[]): Promise<{
        shopVouchers: {
            id: string;
            description: string | null;
            sellerId: string | null;
            enterpriseId: string | null;
            isActive: boolean;
            scope: import(".prisma/client").$Enums.VoucherScope;
            code: string;
            title: string;
            discountType: import(".prisma/client").$Enums.DiscountType;
            discountValue: number;
            maxDiscountValue: number | null;
            minOrderValue: number | null;
            startDate: Date;
            endDate: Date;
            usageLimit: number | null;
            usedCount: number;
        }[];
        platformVouchers: {
            id: string;
            description: string | null;
            sellerId: string | null;
            enterpriseId: string | null;
            isActive: boolean;
            scope: import(".prisma/client").$Enums.VoucherScope;
            code: string;
            title: string;
            discountType: import(".prisma/client").$Enums.DiscountType;
            discountValue: number;
            maxDiscountValue: number | null;
            minOrderValue: number | null;
            startDate: Date;
            endDate: Date;
            usageLimit: number | null;
            usedCount: number;
        }[];
        freeShipVouchers: {
            id: string;
            description: string | null;
            sellerId: string | null;
            enterpriseId: string | null;
            isActive: boolean;
            scope: import(".prisma/client").$Enums.VoucherScope;
            code: string;
            title: string;
            discountType: import(".prisma/client").$Enums.DiscountType;
            discountValue: number;
            maxDiscountValue: number | null;
            minOrderValue: number | null;
            startDate: Date;
            endDate: Date;
            usageLimit: number | null;
            usedCount: number;
        }[];
    }>;
    calculateCheckout(userId: string, dto: ApplyVoucherDto): Promise<{
        subtotal: number;
        shippingFee: number;
        shopDiscount: number;
        platformDiscount: number;
        freeShipDiscount: number;
        totalDiscount: number;
        finalTotal: number;
    }>;
    private validateUserVouchers;
    private _calculateDiscount;
}
